// Database Connection Test Script
// This script tests the connection to the Supabase database

import { createClient } from '@supabase/supabase-js'

// Database configuration
const supabaseUrl = 'https://zubrflyhzsmqngfbjkpg.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp1YnJmbHloenNtcW5nZmJqa3BnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5MjA4NjAsImV4cCI6MjA2ODQ5Njg2MH0.SIDLeNDWphs1LxPLO5Mg37oCUB_8eAvfRIz5lCfle8g'

// Create Supabase client
const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function testDatabaseConnection() {
  console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...')
  console.log('üìç Supabase URL:', supabaseUrl)
  console.log('üîë API Key:', supabaseAnonKey.substring(0, 20) + '...')
  console.log('‚îÅ'.repeat(50))

  try {
    // Test 1: Basic connection test
    console.log('1Ô∏è‚É£  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô...')
    const { data, error } = await supabase.from('categories').select('*').limit(1)
    
    if (error) {
      console.log('‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error.message)
      return false
    }
    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')

    // Test 2: Check tables exist
    console.log('\n2Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...')
    
    const tables = [
      { name: 'categories', description: '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' },
      { name: 'suppliers', description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏´‡∏≤' },
      { name: 'products', description: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' },
      { name: 'movements', description: '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏™‡∏ï‡πá‡∏≠‡∏Å' },
      { name: 'account_codes', description: '‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏±‡∏ç‡∏ä‡∏µ' },
      { name: 'budget_requests', description: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì' },
      { name: 'approvals', description: '‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' }
    ]

    for (const table of tables) {
      try {
        const { data, error } = await supabase
          .from(table.name)
          .select('*')
          .limit(1)
        
        if (error) {
          console.log(`   ‚ùå ${table.name} (${table.description}): ${error.message}`)
        } else {
          console.log(`   ‚úÖ ${table.name} (${table.description}): ‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á`)
        }
      } catch (err) {
        console.log(`   ‚ùå ${table.name} (${table.description}): ${err.message}`)
      }
    }

    // Test 3: Get data counts
    console.log('\n3Ô∏è‚É£  ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á...')
    
    for (const table of tables) {
      try {
        const { count, error } = await supabase
          .from(table.name)
          .select('*', { count: 'exact', head: true })
        
        if (error) {
          console.log(`   ${table.name}: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏±‡∏ö‡πÑ‡∏î‡πâ (${error.message})`)
        } else {
          console.log(`   ${table.name}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`)
        }
      } catch (err) {
        console.log(`   ${table.name}: ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (${err.message})`)
      }
    }

    // Test 4: Test sample queries
    console.log('\n4Ô∏è‚É£  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...')
    
    try {
      const { data: categories } = await supabase
        .from('categories')
        .select('*')
        .limit(3)
      
      console.log('   ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:', categories?.length || 0, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£')
      
      if (categories && categories.length > 0) {
        console.log('   üìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:')
        categories.forEach((cat, index) => {
          console.log(`      ${index + 1}. ${cat.name} - ${cat.description}`)
        })
      }
    } catch (err) {
      console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏î‡πâ:', err.message)
    }

    console.log('\n‚îÅ'.repeat(50))
    console.log('üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!')
    console.log('üí° ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:')
    console.log('   - ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Supabase URL ‡πÅ‡∏•‡∏∞ API Key')
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô Supabase Dashboard')
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RLS (Row Level Security) policies')
    
    return true

  } catch (error) {
    console.log('\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:')
    console.log('   ', error.message)
    console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:')
    console.log('   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï')
    console.log('   2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Supabase URL ‡πÅ‡∏•‡∏∞ API Key')
    console.log('   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Supabase project ‡πÉ‡∏ô dashboard')
    
    return false
  }
}

// Run the test
testDatabaseConnection()
  .then((success) => {
    if (success) {
      console.log('\n‚ú® ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!')
      process.exit(0)
    } else {
      console.log('\n‚ö†Ô∏è  ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•')
      process.exit(1)
    }
  })
  .catch((error) => {
    console.error('\nüí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:', error)
    process.exit(1)
  })
